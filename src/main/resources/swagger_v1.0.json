{
  "swagger": "2.0",
  "info": {
    "description": "SpringBucks Waiter Service",
    "version": "1.0",
    "title": "SpringBucks Waiter Service",
    "contact": {
      "name": "Kevin Jin",
      "email": "kevin.jin01@sap.com"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "https://github.com/CaviaPorcellus/waiter-service"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "coffee-controller",
      "description": "Coffee Controller"
    },
    {
      "name": "coffee-order-controller",
      "description": "Coffee Order Controller"
    }
  ],
  "paths": {
    "/coffee/": {
      "get": {
        "tags": [
          "coffee-controller"
        ],
        "summary": "getByName",
        "operationId": "getByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Coffee"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "coffee-controller"
        ],
        "summary": "addJsonCoffee",
        "operationId": "addJsonCoffeeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CoffeeRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Coffee"
            }
          }
        },
        "deprecated": false
      }
    },
    "/coffee/{id}": {
      "get": {
        "tags": [
          "coffee-controller"
        ],
        "summary": "getById",
        "operationId": "getByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Coffee"
            }
          }
        },
        "deprecated": false
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          }
        },
        "deprecated": false
      }
    },
    "/order/": {
      "post": {
        "tags": [
          "coffee-order-controller"
        ],
        "summary": "createOrder",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "orderRequest",
            "description": "orderRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CoffeeOrder"
            }
          }
        },
        "deprecated": false
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "coffee-order-controller"
        ],
        "summary": "getOrder",
        "operationId": "getOrderUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoffeeOrder"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Coffee": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Coffee"
    },
    "CoffeeOrder": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "customer": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coffee"
          }
        },
        "state": {
          "type": "string",
          "enum": [
            "INIT",
            "PAID",
            "BREWING",
            "BREWED",
            "TAKEN",
            "CANCELLED"
          ]
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "CoffeeOrder"
    },
    "CoffeeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Money"
        }
      },
      "title": "CoffeeRequest"
    },
    "CurrencyUnit": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "countryCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "decimalPlaces": {
          "type": "integer",
          "format": "int32"
        },
        "numeric3Code": {
          "type": "string"
        },
        "numericCode": {
          "type": "integer",
          "format": "int32"
        },
        "pseudoCurrency": {
          "type": "boolean"
        },
        "symbol": {
          "type": "string"
        }
      },
      "title": "CurrencyUnit"
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      },
      "title": "ModelAndView"
    },
    "Money": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountMajor": {
          "type": "number"
        },
        "amountMajorInt": {
          "type": "integer",
          "format": "int32"
        },
        "amountMajorLong": {
          "type": "integer",
          "format": "int64"
        },
        "amountMinor": {
          "type": "number"
        },
        "amountMinorInt": {
          "type": "integer",
          "format": "int32"
        },
        "amountMinorLong": {
          "type": "integer",
          "format": "int64"
        },
        "currencyUnit": {
          "$ref": "#/definitions/CurrencyUnit"
        },
        "minorPart": {
          "type": "integer",
          "format": "int32"
        },
        "negative": {
          "type": "boolean"
        },
        "negativeOrZero": {
          "type": "boolean"
        },
        "positive": {
          "type": "boolean"
        },
        "positiveOrZero": {
          "type": "boolean"
        },
        "scale": {
          "type": "integer",
          "format": "int32"
        },
        "zero": {
          "type": "boolean"
        }
      },
      "title": "Money"
    },
    "OrderRequest": {
      "type": "object",
      "properties": {
        "coffeeNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer": {
          "type": "string"
        }
      },
      "title": "OrderRequest"
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    }
  }
}
